def versionPom = ""
pipeline{
	agent {
      kubernetes {
        yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: shell
    image: yandihlg/jenkins-nodo-java-bootcamp:latest
    volumeMounts:
    - mountPath: /var/run/docker.sock
      name: docker-socket-volume
    securityContext:
      privileged: true
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command:
    - cat
    imagePullPolicy: IfNotPresent
    tty: true
  volumes:
  - name: docker-socket-volume
    hostPath:
      path: /var/run/docker.sock
      type: Socket
    command:
    - sleep
    args:
    - infinity
        '''
        defaultContainer 'shell'
      }
    }

    environment {
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "192.168.49.4:8081"
        NEXUS_REPOSITORY = "backdevelop"
        NEXUS_CREDENTIAL_ID = "adminnexus"
        version=null
        BUILD_NUMBER = 1
    }
	stages {
        stage('Nexus deploy') {
          steps {
            script {
                sh "git clone -b develop https://github.com/ycordovac/jenkins_minikube.git configuracion"
                sh 'cat configuracion/k8/kubernetes-config/config'
                sh 'kubectl apply -f configuracion/services/nexus/nexus.yaml -n default --kubeconfig=configuracion/k8/kubernetes-config/config'
                def servicios = sh (script: 'kubectl get service -n default --kubeconfig=configuracion/k8/kubernetes-config/config', returnStdout: true).trim()
                sh 'echo ' + servicios
            }
          }
        }
	}

	post {
		always {
			sh "docker logout"
		}
	}

}